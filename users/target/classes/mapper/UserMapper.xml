<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.user.dao.UserDao">

    <resultMap type="com.test.user.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="account" column="account" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="realName" column="real_name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="orgId" column="org_id" jdbcType="INTEGER"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP"/>
        <result property="createName" column="create_name" jdbcType="VARCHAR"/>
        <result property="modifyName" column="modify_name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select id,
               account,
               password,
               real_name,
               sex,
               age,
               org_id,
               type,
               remark,
               create_time,
               modify_time,
               create_name,
               modify_name
        from test.user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select id,
               account,
               password,
               real_name,
               sex,
               age,
               org_id,
               type,
               remark,
               create_time,
               modify_time,
               create_name,
               modify_name
        from test.user limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select
        id, account, password, real_name, sex, age, org_id, type, remark, create_time, modify_time, create_name,
        modify_name
        from test.user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="account != null and account != ''">
                and account = #{account}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="realName != null and realName != ''">
                and real_name = #{realName}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="orgId != null">
                and org_id = #{orgId}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="modifyTime != null">
                and modify_time = #{modifyTime}
            </if>
            <if test="createName != null and createName != ''">
                and create_name = #{createName}
            </if>
            <if test="modifyName != null and modifyName != ''">
                and modify_name = #{modifyName}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into test.user(account, password, real_name, sex, age, org_id, type, remark, create_time, modify_time,
                              create_name, modify_name)
        values (#{account}, #{password}, #{realName}, #{sex}, #{age}, #{orgId}, #{type}, #{remark}, #{createTime},
                #{modifyTime}, #{createName}, #{modifyName})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into test.user(account, password, real_name, sex, age, org_id, type, remark, create_time, modify_time,
        create_name, modify_name)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.account}, #{entity.password}, #{entity.realName}, #{entity.sex}, #{entity.age}, #{entity.orgId},
            #{entity.type}, #{entity.remark}, #{entity.createTime}, #{entity.modifyTime}, #{entity.createName},
            #{entity.modifyName})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into test.user(account, password, real_name, sex, age, org_id, type, remark, create_time, modify_time,
        create_name, modify_name)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.account}, #{entity.password}, #{entity.realName}, #{entity.sex}, #{entity.age}, #{entity.orgId},
            #{entity.type}, #{entity.remark}, #{entity.createTime}, #{entity.modifyTime}, #{entity.createName},
            #{entity.modifyName})
        </foreach>
        on duplicate key update
        account = values(account) , password = values(password) , real_name = values(real_name) , sex = values(sex) ,
        age = values(age) , org_id = values(org_id) , type = values(type) , remark = values(remark) , create_time =
        values(create_time) , modify_time = values(modify_time) , create_name = values(create_name) , modify_name =
        values(modify_name)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update test.user
        <set>
            <if test="account != null and account != ''">
                account = #{account},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="realName != null and realName != ''">
                real_name = #{realName},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="orgId != null">
                org_id = #{orgId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime},
            </if>
            <if test="createName != null and createName != ''">
                create_name = #{createName},
            </if>
            <if test="modifyName != null and modifyName != ''">
                modify_name = #{modifyName},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from test.user
        where id = #{id}
    </delete>

</mapper>

